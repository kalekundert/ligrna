#!/usr/bin/env zsh
set -euo pipefail
IFS=$'\n\t'

function fcm () {(
    # Run one of the flow cytometry data analysis scripts, and infer the 
    # correct directories for all the arguments.  This is meant to make it 
    # easier to run these analysis scripts from my lab notebook without having 
    # to be proper about all the paths.

    # Parse arguments.  Most of the arguments are just passed on to the 
    # analysis script, but two options are specially parsed:
    #
    # -o --output <path>
    #   The output file to generate.  All the analysis scripts have this 
    #   option, but this script intercepts it because it also needs to know the 
    #   name of the output file in certain circumstances.
    #
    # --inkscape
    #   Create SVG output files by having matplotlib create PDFs, then 
    #   converting them to SVG after the fact.  For some reason the SVG files 
    #   generated by matplotlib cause inkscape to run really slow and chew up a 
    #   lot of memory.  I played around with one of these files a bit, and I 
    #   think the problem might have to do with the use of clones.  In any 
    #   case, generating PDF files and converting them to SVG seems to avoid 
    #   the problem.

    ARGS="$(getopt -o o: --long output:,inkscape -n fcm -- "$@")"
    USAGE="Usage: fcm <script> <yml> [-o <path>] [--inkscape]"

    if [ $? != 0 ]; then
        echo $USAGE
        exit 1
    fi

    eval set -- "$ARGS"

    output='$.svg'
    inkscape=false

    while true; do
        case $1 in
            -o | --output) output="$2"; shift 2 ;;
            --inkscape) inkscape=true; shift 1 ;;
            --) shift 1 ;;
            *) break ;;
        esac
    done

    # Work out the proper arguments for the analysis script.
    fcm=$(realpath ../../flow_cytometry)
    script=$1
    expt=${2:r}
    output=${output:s/$/$expt}

    # If we need to make a file that can be edited in inkscape, change the 
    # output filename to a temporary PDF file.
    if $inkscape; then
        svg=$output
        output=$(mktemp --tmpdir fcm_XXXXXXXX.pdf)
    fi

    # Run the analysis script.
    echo $fcm/$1.py $fcm/data/$2 "${@:3}" -o $output

    # If we need to make a file that can be edited in inkscape, convert the 
    # temporary PDF back to SVG.
    if $inkscape; then
        echo inkscape --without-gui --file="$output" --export-plain-svg="$svg"
        rm $output
    fi
)}
